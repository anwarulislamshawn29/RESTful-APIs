{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/restaurants": {
      "post": {
        "operationId": "RestaurantController_createRestaurants",
        "summary": "",
        "description": "This API performs to populate data into database",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRestaurantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Restaurant data has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Restaurant"
                }
              }
            }
          }
        },
        "tags": [
          "Restaurants (Create/Get)"
        ]
      },
      "get": {
        "operationId": "RestaurantController_getRestaurants",
        "summary": "",
        "description": "This API will perform two operations, 1. List all restaurants that are open at a certain datetime, To perform this operation only provide dateTime in query, In this case, qRestaurantName & qDishName parameters are optional. 2. Search for restaurants or dishes by name, ranked by relevance to search term. To perform this, Provide, qRestaurantName & qDishName in query, In this case, dateTime parameter is optional",
        "parameters": [
          {
            "name": "dateTime",
            "required": false,
            "in": "query",
            "example": "2022-07-01 12:30:00",
            "description": "Date & Time to check restaurant is open or not",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qRestaurantName",
            "required": false,
            "in": "query",
            "example": "restaurant name",
            "description": "Search term for Restaurant name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qDishName",
            "required": false,
            "in": "query",
            "example": "dish name",
            "description": "Search term for Dishes name",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "example": "2022-07-01 12:30:00",
            "description": "Date & Time to check restaurant is open or not",
            "name": "dateTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "example": "restaurant name",
            "description": "Search term for Restaurant name",
            "name": "qRestaurantName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "example": "dish name",
            "description": "Search term for Dishes name",
            "name": "qDishName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get List of Restaurants.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Restaurant"
                }
              }
            }
          },
          "404": {
            "description": "No Restaurant found !!!"
          }
        },
        "tags": [
          "Restaurants (Create/Get)"
        ]
      }
    },
    "/api/v1/top-restaurants": {
      "get": {
        "operationId": "TopRestaurantController_getTopRestaurants",
        "summary": "",
        "description": "This API performs to List top y restaurants that have more or less than x number of dishes within a price range, ranked alphabetically. More or less (than x) is a parameter that the API allows the consumer to enter",
        "parameters": [
          {
            "name": "dishesHaveMoreThan",
            "required": true,
            "in": "query",
            "example": 1,
            "description": "A restaurent having more number of disher",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dishesHaveLessThan",
            "required": true,
            "in": "query",
            "example": 20,
            "description": "A restaurent having less number of dishes",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "topPrice",
            "required": true,
            "in": "query",
            "example": 300,
            "description": "Top price of dishes in a range",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "lowerPrice",
            "required": true,
            "in": "query",
            "example": 1,
            "description": "Lower price of dishes in a range",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Top Restaurants.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopRestaurantDto"
                }
              }
            }
          },
          "404": {
            "description": "No Restaurant found !!!"
          }
        },
        "tags": [
          "TOP-restaurants"
        ]
      }
    },
    "/api/v1/purchase": {
      "post": {
        "operationId": "PurchaseController_purchases",
        "summary": "",
        "description": "This API performs, Process a user purchasing a dish from a restaurant, handling all relevant data changes in an atomic transaction.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Make Purchase.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseDto"
                }
              }
            }
          },
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Purchase"
        ]
      }
    },
    "/api/v1/menu": {
      "post": {
        "operationId": "MenuController_create",
        "summary": "",
        "description": "This API performs to populate menu information into Database",
        "parameters": [
          {
            "name": "restaurantId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenuDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMenuDto"
                }
              }
            }
          }
        },
        "tags": [
          "Create Menu"
        ]
      }
    },
    "/api/v1/opening-hours": {
      "post": {
        "operationId": "OpeningHoursController_create",
        "summary": "",
        "description": "This API performs to populate Restaurant schedule into database",
        "parameters": [
          {
            "name": "restaurantId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpeningHoursDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOpeningHoursDto"
                }
              }
            }
          }
        },
        "tags": [
          "Set Schedule/Opening Hours"
        ]
      }
    },
    "/api/v1/user": {
      "post": {
        "operationId": "UserController_create",
        "summary": "",
        "description": "This API performs to register/populate user information into Database.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserDto"
                }
              }
            }
          }
        },
        "tags": [
          "User (Register/Remove)"
        ]
      },
      "delete": {
        "operationId": "UserController_removeUser",
        "summary": "",
        "description": "This API performs to remove/soft delete, user information from Database.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "example": "08ff6a8e-76bd-4f27-850c-b915952d6282",
            "description": "Unique identifier of user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserDto"
                }
              }
            }
          }
        },
        "tags": [
          "User (Register/Remove)"
        ]
      }
    }
  },
  "info": {
    "title": "Food Delivery Banckend",
    "description": "1. List all restaurants that are open at a certain datetime, 2. List top y restaurants that have more or less than x number of dishes within a price range, ranked alphabetically. More or less (than x) is a parameter that the API allows the consumer to enter. 3. Search for restaurants or dishes by name, ranked by relevance to search term. 4. Process a user purchasing a dish from a restaurant, handling all relevant data changes in an atomic transaction. Do watch out for potential race conditions that can arise from concurrent transactions!",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateRestaurantDto": {
        "type": "object",
        "properties": {
          "cashBalance": {
            "type": "number",
            "example": 20,
            "description": "Cash Balance of a restaurant"
          },
          "restaurantName": {
            "type": "string",
            "example": "restaurant name",
            "description": "Name of the restaurant"
          }
        },
        "required": [
          "cashBalance",
          "restaurantName"
        ]
      },
      "OpeningHours": {
        "type": "object",
        "properties": {
          "restaurantId": {
            "type": "string"
          },
          "day": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "restaurant": {
            "$ref": "#/components/schemas/Restaurant"
          }
        },
        "required": [
          "restaurantId",
          "day",
          "startTime",
          "endTime",
          "id",
          "updated",
          "restaurant"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cashBalance": {
            "type": "number"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "paymentHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistory"
            }
          }
        },
        "required": [
          "id",
          "name",
          "cashBalance",
          "updated",
          "paymentHistories"
        ]
      },
      "PaymentHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dishName": {
            "type": "string"
          },
          "restaurantName": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number"
          },
          "transactionDate": {
            "format": "date-time",
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "restaurantId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "restaurant": {
            "$ref": "#/components/schemas/Restaurant"
          }
        },
        "required": [
          "id",
          "dishName",
          "restaurantName",
          "transactionAmount",
          "transactionDate",
          "userId",
          "restaurantId",
          "user",
          "restaurant"
        ]
      },
      "Restaurant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cashBalance": {
            "type": "number"
          },
          "restaurantName": {
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Menu"
            }
          },
          "openingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHours"
            }
          },
          "paymentHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistory"
            }
          }
        },
        "required": [
          "id",
          "cashBalance",
          "restaurantName",
          "created",
          "updated",
          "menus",
          "openingHours",
          "paymentHistories"
        ]
      },
      "Menu": {
        "type": "object",
        "properties": {
          "restaurantId": {
            "type": "string"
          },
          "dishName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "restaurant": {
            "$ref": "#/components/schemas/Restaurant"
          }
        },
        "required": [
          "restaurantId",
          "dishName",
          "price",
          "createdBy",
          "id",
          "updated",
          "restaurant"
        ]
      },
      "TopRestaurantDto": {
        "type": "object",
        "properties": {
          "dishesHaveMoreThan": {
            "type": "number",
            "example": 1,
            "description": "A restaurent having more number of disher"
          },
          "dishesHaveLessThan": {
            "type": "number",
            "example": 20,
            "description": "A restaurent having less number of dishes"
          },
          "topPrice": {
            "type": "number",
            "example": 300,
            "description": "Top price of dishes in a range"
          },
          "lowerPrice": {
            "type": "number",
            "example": 1,
            "description": "Lower price of dishes in a range"
          }
        },
        "required": [
          "dishesHaveMoreThan",
          "dishesHaveLessThan",
          "topPrice",
          "lowerPrice"
        ]
      },
      "CreatePurchaseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mr. xyz",
            "description": "User name/ Customer name!"
          },
          "dishName": {
            "type": "string",
            "example": "Watercress",
            "description": "Name of the dish, which a user wants to purchase"
          },
          "restaurantName": {
            "type": "string",
            "example": "restaurant",
            "description": "Name of the restaurant, From which a user wants to purchase"
          },
          "transactionAmount": {
            "type": "number",
            "example": 10,
            "description": "The transection amount"
          }
        },
        "required": [
          "name",
          "dishName",
          "restaurantName",
          "transactionAmount"
        ]
      },
      "PurchaseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mr. xyz",
            "description": "User name/ Customer name!"
          },
          "dishName": {
            "type": "string",
            "example": "Watercress",
            "description": "Name of the dish, which a user wants to purchase"
          },
          "restaurantName": {
            "type": "string",
            "example": "restaurant",
            "description": "Name of the restaurant, From which a user wants to purchase"
          },
          "transactionAmount": {
            "type": "number",
            "example": 10,
            "description": "The transection amount"
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier of a registered user"
          },
          "restaurantId": {
            "type": "string",
            "description": "Unique identifier of a restaurant"
          }
        },
        "required": [
          "name",
          "dishName",
          "restaurantName",
          "transactionAmount",
          "userId",
          "restaurantId"
        ]
      },
      "MenusWithProperties": {
        "type": "object",
        "properties": {
          "dishName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "inventory": {
            "type": "number"
          }
        },
        "required": [
          "dishName",
          "price",
          "inventory"
        ]
      },
      "CreateMenuDto": {
        "type": "object",
        "properties": {
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenusWithProperties"
            }
          }
        },
        "required": [
          "menus"
        ]
      },
      "OpeningHoursWithProperties": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        },
        "required": [
          "day",
          "startTime",
          "endTime"
        ]
      },
      "CreateOpeningHoursDto": {
        "type": "object",
        "properties": {
          "openingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHoursWithProperties"
            }
          }
        },
        "required": [
          "openingHours"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Shawn",
            "description": "Name of the user"
          },
          "cashBalance": {
            "type": "number",
            "example": 3500,
            "description": "Cash balance of user"
          }
        },
        "required": [
          "name",
          "cashBalance"
        ]
      },
      "DeleteUserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "08ff6a8e-76bd-4f27-850c-b915952d6282",
            "description": "Unique identifier of user."
          }
        },
        "required": [
          "userId"
        ]
      }
    }
  }
}